import { SignOutButton } from "@clerk/clerk-react";
import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";
import TextareaAutosize from "react-textarea-autosize";
import { PostView } from "~/components/postview";

import { api } from "~/utils/api";

const PostCreator = (props: { profileImageUrl: string }) => {
  const [input, setInput] = useState("");

  const { user } = useUser();
  const id = user?.id ?? "";

  const ctx = api.useContext();
  const { mutate, isLoading: isPosting } = api.posts.create.useMutation({
    onSuccess: () => {
      setInput("");
      void ctx.posts.getAllInfinite.invalidate();
    },
    onError: (e) => {
      const errorMessage = e.data?.zodError?.fieldErrors.content;
      if (errorMessage && errorMessage[0]) {
        console.log(errorMessage);
      } else {
        console.log("Failed to post! Please try again later.");
      }
    },
  });
  return (
    <>
      <div className="flex gap-3  p-4">
        <Image
          src={props.profileImageUrl}
          alt={"profile Image"}
          width={56}
          height={56}
          className="h-12 w-12 rounded-full"
        />
        <div className="w-full">
          <TextareaAutosize
            className="my-2 w-full resize-none overflow-hidden bg-transparent text-xl placeholder-gray-400 outline-none"
            placeholder="What's happening?"
            value={input}
            onChange={(e) => setInput(e.target.value)}
            onKeyDown={(e) => {
              if (e.key === "Enter") {
                e.preventDefault();
                if (input !== "") {
                  mutate({ content: input });
                }
              }
            }}
          />
          {/* <div className="mb-2  h-1 border-b border-zinc-700" /> */}
          <div className="flex justify-end">
            <button
              className="h-10 w-20 rounded-full bg-sky-500 hover:bg-sky-600"
              onClick={() => mutate({ content: input })}
              disabled={isPosting}
            >
              <span className="text-base font-bold">Tweet</span>
            </button>
          </div>
        </div>
      </div>
    </>
  );
};

const Feed = () => {
  const { data, isLoading } = api.posts.getAllInfinite.useQuery({ limit: 100 });

  if (isLoading) return <div>loading</div>;

  return (
    <div className="flex grow flex-col">
      {data &&
        data.map((fullPost) => (
          <PostView {...fullPost} key={fullPost.post.id} />
        ))}
    </div>
  );
};

const Home: NextPage = () => {
  const user = useUser();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="overflow-none flex h-screen justify-center">
        <div className="flex h-full w-full flex-col border-x border-zinc-700 md:max-w-2xl">
          <span className="border-b border-zinc-700 p-4 text-xl font-bold">
            Home
          </span>
          <div className="border-b border-zinc-700">
            {!user.isSignedIn && <SignInButton />}
            {!!user.isSignedIn && (
              <PostCreator profileImageUrl={user.user?.profileImageUrl} />
            )}
          </div>
          <Feed />
          {!!user.isSignedIn && <SignOutButton />}
        </div>
      </main>
    </>
  );
};

export default Home;

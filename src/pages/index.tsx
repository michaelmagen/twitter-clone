import { SignOutButton } from "@clerk/clerk-react";
import { SignInButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useRef } from "react";
import type { ChangeEvent } from "react";

import { api } from "~/utils/api";

type postProps = { profileImageUrl: string };
const PostCreator = (props: postProps) => {
  const ref = useRef<HTMLTextAreaElement>(null);

  // Handles the textarea resize. The subtracted number on `e.target.scrollHeight - 16` is the sum of top and bottom padding.
  const handleInput = (e: ChangeEvent<HTMLTextAreaElement>) => {
    if (ref.current) {
      ref.current.style.height = "auto";
      ref.current.style.height = `${e.target.scrollHeight - 16}px`;
    }
  };

  return (
    <>
      <div className="flex gap-3  p-4">
        <Image
          src={props.profileImageUrl}
          alt={"profile Image"}
          width={56}
          height={56}
          className="h-14 w-14 rounded-full"
        />
        <div className="w-full">
          <textarea
            ref={ref}
            onInput={handleInput}
            placeholder="What's happening?"
            className="placeholder-gray-40 w-full resize-none overflow-hidden bg-transparent p-1 text-xl outline-none "
          />
          <div className="mb-2  h-1 border-b border-zinc-700" />
          <div className="flex justify-end">
            <button className="h-10 w-20 rounded-full bg-sky-500 hover:bg-sky-600">
              <span className="text-base font-bold">Tweet</span>
            </button>
          </div>
        </div>
      </div>
    </>
  );
};

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const user = useUser();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="overflow-none flex h-screen justify-center">
        <div className="flex h-full w-full flex-col border-x border-zinc-700 md:max-w-2xl">
          <span className="border-b border-zinc-700 p-4 text-xl font-bold">
            Home
          </span>
          <div className="border-b border-zinc-700">
            {!user.isSignedIn && <SignInButton />}
            {!!user.isSignedIn && (
              <PostCreator profileImageUrl={user.user?.profileImageUrl} />
            )}
            {!!user.isSignedIn && <SignOutButton />}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
